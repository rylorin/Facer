{"version":3,"sources":["node_modules/@angular/common/fesm2015/http.js","node_modules/@capacitor/core/dist/esm/core-plugin-definitions.js","node_modules/@capacitor/core/dist/esm/global.js","node_modules/@capacitor/core/dist/esm/index.js","node_modules/@capacitor/core/dist/esm/util.js","node_modules/@capacitor/core/dist/esm/web-plugins.js","node_modules/@capacitor/core/dist/esm/web-runtime.js","node_modules/@capacitor/core/dist/esm/web/accessibility.js","node_modules/@capacitor/core/dist/esm/web/app.js","node_modules/@capacitor/core/dist/esm/web/browser.js","node_modules/@capacitor/core/dist/esm/web/camera.js","node_modules/@capacitor/core/dist/esm/web/clipboard.js","node_modules/@capacitor/core/dist/esm/web/device.js","node_modules/@capacitor/core/dist/esm/web/filesystem.js","node_modules/@capacitor/core/dist/esm/web/geolocation.js","node_modules/@capacitor/core/dist/esm/web/index.js","node_modules/@capacitor/core/dist/esm/web/local-notifications.js","node_modules/@capacitor/core/dist/esm/web/modals.js","node_modules/@capacitor/core/dist/esm/web/motion.js","node_modules/@capacitor/core/dist/esm/web/network.js","node_modules/@capacitor/core/dist/esm/web/permissions.js","node_modules/@capacitor/core/dist/esm/web/share.js","node_modules/@capacitor/core/dist/esm/web/splash-screen.js","node_modules/@capacitor/core/dist/esm/web/storage.js","node_modules/@capacitor/core/dist/esm/web/toast.js","node_modules/@capacitor/core/node_modules/tslib/tslib.es6.js","src/app/tab1/tab1.page.html","src/app/tab1/tab1.module.ts","src/app/tab1/tab1.page.scss","src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.2.14\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpHandler {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Update() { }\nif (false) {\n    /** @type {?} */\n    Update.prototype.name;\n    /** @type {?|undefined} */\n    Update.prototype.value;\n    /** @type {?} */\n    Update.prototype.op;\n}\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param {?} name The header name.\n     *\n     * @return {?} The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param {?} name The header name from which to retrieve values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param {?} name The header name for which to append the value or values.\n     * @param {?} value The new value or array of values.\n     *\n     * @return {?} A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value or values to set or overide for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The value or values to delete for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\nif (false) {\n    /**\n     * Internal map of lowercase header names to values.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.headers;\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.normalizedNames;\n    /**\n     * Complete the lazy initialization of this object (needed before reading).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyInit;\n    /**\n     * Queued updates to be materialized the next initialization.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyUpdate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@publicApi\n *\n * @record\n */\nfunction HttpParameterCodec() { }\nif (false) {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeValue = function (value) { };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeValue = function (value) { };\n}\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * @record\n */\nfunction Update$1() { }\nif (false) {\n    /** @type {?} */\n    Update$1.prototype.param;\n    /** @type {?|undefined} */\n    Update$1.prototype.value;\n    /** @type {?} */\n    Update$1.prototype.op;\n}\n/**\n * Options used to construct an `HttpParams` instance.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpParamsOptions() { }\nif (false) {\n    /**\n     * String representation of the HTTP parameters in URL-query-string format.\n     * Mutually exclusive with `fromObject`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromString;\n    /**\n     * Object map of the HTTP parameters. Mutually exclusive with `fromString`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromObject;\n    /**\n     * Encoding codec used to parse and serialize the parameters.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.encoder;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.map;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.encoder;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.updates;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.cloneFrom;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Construction interface for `HttpRequest`s.\n *\n * All values are optional and will override default values if provided.\n * @record\n */\nfunction HttpRequestInit() { }\nif (false) {\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.headers;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.reportProgress;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.params;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.responseType;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.withCredentials;\n}\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\nif (false) {\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     * @type {?}\n     */\n    HttpRequest.prototype.body;\n    /**\n     * Outgoing headers for this request.\n     * @type {?}\n     */\n    HttpRequest.prototype.headers;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     * @type {?}\n     */\n    HttpRequest.prototype.reportProgress;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     * @type {?}\n     */\n    HttpRequest.prototype.withCredentials;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     * @type {?}\n     */\n    HttpRequest.prototype.responseType;\n    /**\n     * The outgoing HTTP request method.\n     * @type {?}\n     */\n    HttpRequest.prototype.method;\n    /**\n     * Outgoing URL parameters.\n     * @type {?}\n     */\n    HttpRequest.prototype.params;\n    /**\n     * The outgoing URL with all URL parameters set.\n     * @type {?}\n     */\n    HttpRequest.prototype.urlWithParams;\n    /** @type {?} */\n    HttpRequest.prototype.url;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base interface for progress events.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpProgressEvent() { }\nif (false) {\n    /**\n     * Progress event type is either upload or download.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.type;\n    /**\n     * Number of bytes uploaded or downloaded.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.loaded;\n    /**\n     * Total number of bytes to upload or download. Depending on the request or\n     * response, this may not be computable and thus may not be present.\n     * @type {?|undefined}\n     */\n    HttpProgressEvent.prototype.total;\n}\n/**\n * A download progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpDownloadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpDownloadProgressEvent.prototype.type;\n    /**\n     * The partial response body as downloaded so far.\n     *\n     * Only present if the responseType was `text`.\n     * @type {?|undefined}\n     */\n    HttpDownloadProgressEvent.prototype.partialText;\n}\n/**\n * An upload progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpUploadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUploadProgressEvent.prototype.type;\n}\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpSentEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpSentEvent.prototype.type;\n}\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nfunction HttpUserEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUserEvent.prototype.type;\n}\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n *\n * @record\n */\nfunction HttpJsonParseError() { }\nif (false) {\n    /** @type {?} */\n    HttpJsonParseError.prototype.error;\n    /** @type {?} */\n    HttpJsonParseError.prototype.text;\n}\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\nif (false) {\n    /**\n     * All response headers.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.headers;\n    /**\n     * Response status code.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.status;\n    /**\n     * Textual description of response status code.\n     *\n     * Do not depend on this.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.statusText;\n    /**\n     * URL of the resource retrieved, or null if not available.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.url;\n    /**\n     * Whether the status code falls in the 2xx range.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.ok;\n    /**\n     * Type of the response, narrowed to either the full response or the header.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.type;\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpHeaderResponse.prototype.type;\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /**\n     * The response body, or `null` if one was not returned.\n     * @type {?}\n     */\n    HttpResponse.prototype.body;\n    /** @type {?} */\n    HttpResponse.prototype.type;\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpErrorResponse.prototype.name;\n    /** @type {?} */\n    HttpErrorResponse.prototype.message;\n    /** @type {?} */\n    HttpErrorResponse.prototype.error;\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     * @type {?}\n     */\n    HttpErrorResponse.prototype.ok;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (/** @type {?} */ (first));\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpClient.prototype.handler;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Intercepts and handles an `HttpRequest` or `HttpResponse`.\n *\n * Most interceptors transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n * An interceptor may transform the\n * response event stream as well, by applying additional RxJS operators on the stream\n * returned by `next.handle()`.\n *\n * More rarely, an interceptor may handle the request entirely,\n * and compose a new event stream instead of invoking `next.handle()`. This is an\n * acceptable behavior, but keep in mind that further interceptors will be skipped entirely.\n *\n * It is also rare but valid for an interceptor to return multiple responses on the\n * event stream for a single request.\n *\n * \\@publicApi\n *\n * @see [HTTP Guide](guide/http#intercepting-requests-and-responses)\n *\n * \\@usageNotes\n *\n * To use the same instance of `HttpInterceptors` for the entire app, import the `HttpClientModule`\n * only in your `AppModule`, and add the interceptors to the root application injector .\n * If you import `HttpClientModule` multiple times across different modules (for example, in lazy\n * loading modules), each import creates a new copy of the `HttpClientModule`, which overwrites the interceptors\n * provided in the root module.\n *\n * @record\n */\nfunction HttpInterceptor() { }\nif (false) {\n    /**\n     * Identifies and handles a given HTTP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    HttpInterceptor.prototype.intercept = function (req, next) { };\n}\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.next;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.interceptor;\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.callbackMap;\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.document;\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpInterceptor.prototype.jsonp;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/**\n * Tracks a response from the server that does not yet have a body.\n * @record\n */\nfunction PartialResponse() { }\nif (false) {\n    /** @type {?} */\n    PartialResponse.prototype.headers;\n    /** @type {?} */\n    PartialResponse.prototype.status;\n    /** @type {?} */\n    PartialResponse.prototype.statusText;\n    /** @type {?} */\n    PartialResponse.prototype.url;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXhrBackend.prototype.xhrFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\nif (false) {\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastCookieString;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastToken;\n    /**\n     * \\@internal for testing\n     * @type {?}\n     */\n    HttpXsrfCookieExtractor.prototype.parseCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.doc;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.cookieName;\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.tokenService;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.headerName;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.chain;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.backend;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.injector;\n}\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((/**\n     * @param {?} next\n     * @param {?} interceptor\n     * @return {?}\n     */\n    (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ɵHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","export var CameraSource;\n(function (CameraSource) {\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\nexport var FilesystemDirectory;\n(function (FilesystemDirectory) {\n    /**\n     * The Application directory\n     */\n    FilesystemDirectory[\"Application\"] = \"APPLICATION\";\n    /**\n     * The Documents directory\n     */\n    FilesystemDirectory[\"Documents\"] = \"DOCUMENTS\";\n    /**\n     * The Data directory\n     */\n    FilesystemDirectory[\"Data\"] = \"DATA\";\n    /**\n     * The Cache directory\n     */\n    FilesystemDirectory[\"Cache\"] = \"CACHE\";\n    /**\n     * The external directory (Android only)\n     */\n    FilesystemDirectory[\"External\"] = \"EXTERNAL\";\n    /**\n     * The external storage directory (Android only)\n     */\n    FilesystemDirectory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\n})(FilesystemDirectory || (FilesystemDirectory = {}));\nexport var FilesystemEncoding;\n(function (FilesystemEncoding) {\n    FilesystemEncoding[\"UTF8\"] = \"utf8\";\n    FilesystemEncoding[\"ASCII\"] = \"ascii\";\n    FilesystemEncoding[\"UTF16\"] = \"utf16\";\n})(FilesystemEncoding || (FilesystemEncoding = {}));\nexport var HapticsImpactStyle;\n(function (HapticsImpactStyle) {\n    HapticsImpactStyle[\"Heavy\"] = \"HEAVY\";\n    HapticsImpactStyle[\"Medium\"] = \"MEDIUM\";\n    HapticsImpactStyle[\"Light\"] = \"LIGHT\";\n})(HapticsImpactStyle || (HapticsImpactStyle = {}));\nexport var HapticsNotificationType;\n(function (HapticsNotificationType) {\n    HapticsNotificationType[\"SUCCESS\"] = \"SUCCESS\";\n    HapticsNotificationType[\"WARNING\"] = \"WARNING\";\n    HapticsNotificationType[\"ERROR\"] = \"ERROR\";\n})(HapticsNotificationType || (HapticsNotificationType = {}));\nexport var KeyboardStyle;\n(function (KeyboardStyle) {\n    KeyboardStyle[\"Dark\"] = \"DARK\";\n    KeyboardStyle[\"Light\"] = \"LIGHT\";\n})(KeyboardStyle || (KeyboardStyle = {}));\nexport var KeyboardResize;\n(function (KeyboardResize) {\n    KeyboardResize[\"Body\"] = \"body\";\n    KeyboardResize[\"Ionic\"] = \"ionic\";\n    KeyboardResize[\"Native\"] = \"native\";\n    KeyboardResize[\"None\"] = \"none\";\n})(KeyboardResize || (KeyboardResize = {}));\nexport var ActionSheetOptionStyle;\n(function (ActionSheetOptionStyle) {\n    ActionSheetOptionStyle[\"Default\"] = \"DEFAULT\";\n    ActionSheetOptionStyle[\"Destructive\"] = \"DESTRUCTIVE\";\n    ActionSheetOptionStyle[\"Cancel\"] = \"CANCEL\";\n})(ActionSheetOptionStyle || (ActionSheetOptionStyle = {}));\n//\nexport var PermissionType;\n(function (PermissionType) {\n    PermissionType[\"Camera\"] = \"camera\";\n    PermissionType[\"Photos\"] = \"photos\";\n    PermissionType[\"Geolocation\"] = \"geolocation\";\n    PermissionType[\"Notifications\"] = \"notifications\";\n    PermissionType[\"ClipboardRead\"] = \"clipboard-read\";\n    PermissionType[\"ClipboardWrite\"] = \"clipboard-write\";\n})(PermissionType || (PermissionType = {}));\nexport var PhotosAlbumType;\n(function (PhotosAlbumType) {\n    /**\n     * Album is a \"smart\" album (such as Favorites or Recently Added)\n     */\n    PhotosAlbumType[\"Smart\"] = \"smart\";\n    /**\n     * Album is a cloud-shared album\n     */\n    PhotosAlbumType[\"Shared\"] = \"shared\";\n    /**\n     * Album is a user-created album\n     */\n    PhotosAlbumType[\"User\"] = \"user\";\n})(PhotosAlbumType || (PhotosAlbumType = {}));\nexport var StatusBarStyle;\n(function (StatusBarStyle) {\n    /**\n     * Light text for dark backgrounds.\n     */\n    StatusBarStyle[\"Dark\"] = \"DARK\";\n    /**\n     * Dark text for light backgrounds.\n     */\n    StatusBarStyle[\"Light\"] = \"LIGHT\";\n})(StatusBarStyle || (StatusBarStyle = {}));\n//# sourceMappingURL=core-plugin-definitions.js.map","import { CapacitorWeb } from './web-runtime';\n// Create our default Capacitor instance, which will be\n// overridden on native platforms\nvar Capacitor = (function (globalThis) {\n    // Create a new CapacitorWeb instance if one doesn't already exist on globalThis\n    // Ensure the global is assigned the same Capacitor instance,\n    // then export Capacitor so it can be imported in other modules\n    return globalThis.Capacitor = (globalThis.Capacitor || new CapacitorWeb());\n})(\n// figure out the current globalThis, such as \"window\", \"self\" or \"global\"\n// ensure errors are not thrown in an node SSR environment or web worker\ntypeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nvar Plugins = Capacitor.Plugins;\nexport { Capacitor, Plugins };\n//# sourceMappingURL=global.js.map","export * from './core-plugin-definitions';\nexport * from './global';\nexport * from './web-plugins';\nexport * from './web/index';\n//# sourceMappingURL=index.js.map","export var extend = function (target) {\n    var objs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objs[_i - 1] = arguments[_i];\n    }\n    objs.forEach(function (o) {\n        if (o && typeof (o) === 'object') {\n            for (var k in o) {\n                if (o.hasOwnProperty(k)) {\n                    target[k] = o[k];\n                }\n            }\n        }\n    });\n    return target;\n};\nexport var uuid4 = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\n//# sourceMappingURL=util.js.map","import { Plugins } from './global';\nimport { mergeWebPlugins, mergeWebPlugin } from './web/index';\nexport * from './web/accessibility';\nexport * from './web/app';\nexport * from './web/browser';\nexport * from './web/camera';\nexport * from './web/clipboard';\nexport * from './web/filesystem';\nexport * from './web/geolocation';\nexport * from './web/device';\nexport * from './web/local-notifications';\nexport * from './web/share';\nexport * from './web/modals';\nexport * from './web/motion';\nexport * from './web/network';\nexport * from './web/permissions';\nexport * from './web/splash-screen';\nexport * from './web/storage';\nexport * from './web/toast';\nmergeWebPlugins(Plugins);\nexport var registerWebPlugin = function (plugin) {\n    mergeWebPlugin(Plugins, plugin);\n};\n//# sourceMappingURL=web-plugins.js.map","var CapacitorWeb = /** @class */ (function () {\n    function CapacitorWeb() {\n        var _this = this;\n        this.platform = 'web';\n        this.isNative = false;\n        // Need to assign here to avoid having to define every plugin but still\n        // get the typed benefits of the provided plugins in PluginRegistry\n        this.Plugins = {};\n        // Build a proxy for the Plugins object that returns the \"Noop Plugin\"\n        // if a plugin isn't available\n        this.Plugins = new Proxy(this.Plugins, {\n            get: function (target, prop) {\n                if (typeof target[prop] === 'undefined') {\n                    var thisRef_1 = _this;\n                    return new Proxy({}, {\n                        get: function (_target, _prop) {\n                            if (typeof _target[_prop] === 'undefined') {\n                                return thisRef_1.pluginMethodNoop.bind(thisRef_1, _target, _prop, prop);\n                            }\n                            else {\n                                return _target[_prop];\n                            }\n                        }\n                    });\n                }\n                else {\n                    return target[prop];\n                }\n            }\n        });\n    }\n    CapacitorWeb.prototype.pluginMethodNoop = function (_target, _prop, pluginName) {\n        return Promise.reject(pluginName + \" does not have web implementation.\");\n    };\n    CapacitorWeb.prototype.getPlatform = function () {\n        return this.platform;\n    };\n    CapacitorWeb.prototype.isPluginAvailable = function (name) {\n        return this.Plugins.hasOwnProperty(name);\n    };\n    CapacitorWeb.prototype.convertFileSrc = function (filePath) {\n        return filePath;\n    };\n    CapacitorWeb.prototype.handleError = function (e) {\n        console.error(e);\n    };\n    return CapacitorWeb;\n}());\nexport { CapacitorWeb };\n//# sourceMappingURL=web-runtime.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar AccessibilityPluginWeb = /** @class */ (function (_super) {\n    __extends(AccessibilityPluginWeb, _super);\n    function AccessibilityPluginWeb() {\n        return _super.call(this, {\n            name: 'Accessibility',\n            platforms: ['web']\n        }) || this;\n    }\n    AccessibilityPluginWeb.prototype.isScreenReaderEnabled = function () {\n        throw new Error('Feature not available in the browser');\n    };\n    AccessibilityPluginWeb.prototype.speak = function (options) {\n        if (!('speechSynthesis' in window)) {\n            return Promise.reject('Browser does not support the Speech Synthesis API');\n        }\n        var utterance = new SpeechSynthesisUtterance(options.value);\n        if (options.language) {\n            utterance.lang = options.language;\n        }\n        window.speechSynthesis.speak(utterance);\n        return Promise.resolve();\n    };\n    return AccessibilityPluginWeb;\n}(WebPlugin));\nexport { AccessibilityPluginWeb };\nvar Accessibility = new AccessibilityPluginWeb();\nexport { Accessibility };\n//# sourceMappingURL=accessibility.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar AppPluginWeb = /** @class */ (function (_super) {\n    __extends(AppPluginWeb, _super);\n    function AppPluginWeb() {\n        var _this = _super.call(this, {\n            name: 'App',\n            platforms: ['web']\n        }) || this;\n        if (typeof document !== 'undefined') {\n            document.addEventListener('visibilitychange', _this.handleVisibilityChange.bind(_this), false);\n        }\n        return _this;\n    }\n    AppPluginWeb.prototype.exitApp = function () {\n        throw new Error('Method not implemented.');\n    };\n    AppPluginWeb.prototype.canOpenUrl = function (_options) {\n        return Promise.resolve({ value: true });\n    };\n    AppPluginWeb.prototype.openUrl = function (_options) {\n        return Promise.resolve({ completed: true });\n    };\n    AppPluginWeb.prototype.getLaunchUrl = function () {\n        return Promise.resolve({ url: '' });\n    };\n    AppPluginWeb.prototype.handleVisibilityChange = function () {\n        var data = {\n            isActive: document.hidden !== true\n        };\n        this.notifyListeners('appStateChange', data);\n    };\n    return AppPluginWeb;\n}(WebPlugin));\nexport { AppPluginWeb };\nvar App = new AppPluginWeb();\nexport { App };\n//# sourceMappingURL=app.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nvar BrowserPluginWeb = /** @class */ (function (_super) {\n    __extends(BrowserPluginWeb, _super);\n    function BrowserPluginWeb() {\n        return _super.call(this, {\n            name: 'Browser',\n            platforms: ['web']\n        }) || this;\n    }\n    BrowserPluginWeb.prototype.open = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._lastWindow = window.open(options.url, options.windowName || '_blank');\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    BrowserPluginWeb.prototype.prefetch = function (_options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // Does nothing\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    BrowserPluginWeb.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._lastWindow && this._lastWindow.close();\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    return BrowserPluginWeb;\n}(WebPlugin));\nexport { BrowserPluginWeb };\nvar Browser = new BrowserPluginWeb();\nexport { Browser };\n//# sourceMappingURL=browser.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { CameraResultType } from '../core-plugin-definitions';\nvar CameraPluginWeb = /** @class */ (function (_super) {\n    __extends(CameraPluginWeb, _super);\n    function CameraPluginWeb() {\n        return _super.call(this, {\n            name: 'Camera',\n            platforms: ['web']\n        }) || this;\n    }\n    CameraPluginWeb.prototype.getPhoto = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                options;\n                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n                        var cameraModal;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    cameraModal = document.createElement('pwa-camera-modal');\n                                    document.body.appendChild(cameraModal);\n                                    return [4 /*yield*/, cameraModal.componentOnReady()];\n                                case 1:\n                                    _a.sent();\n                                    cameraModal.addEventListener('onPhoto', function (e) { return __awaiter(_this, void 0, void 0, function () {\n                                        var photo, _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0:\n                                                    photo = e.detail;\n                                                    if (!(photo === null)) return [3 /*break*/, 1];\n                                                    reject('User cancelled photos app');\n                                                    return [3 /*break*/, 4];\n                                                case 1:\n                                                    if (!(photo instanceof Error)) return [3 /*break*/, 2];\n                                                    reject(photo.message);\n                                                    return [3 /*break*/, 4];\n                                                case 2:\n                                                    _a = resolve;\n                                                    return [4 /*yield*/, this._getCameraPhoto(photo, options)];\n                                                case 3:\n                                                    _a.apply(void 0, [_b.sent()]);\n                                                    _b.label = 4;\n                                                case 4:\n                                                    cameraModal.dismiss();\n                                                    document.body.removeChild(cameraModal);\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); });\n                                    cameraModal.present();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    CameraPluginWeb.prototype._getCameraPhoto = function (photo, options) {\n        return new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            var format = photo.type.split('/')[1];\n            if (options.resultType === CameraResultType.Uri) {\n                resolve({\n                    webPath: URL.createObjectURL(photo),\n                    format: format\n                });\n            }\n            else {\n                reader.readAsDataURL(photo);\n                reader.onloadend = function () {\n                    var r = reader.result;\n                    if (options.resultType === CameraResultType.DataUrl) {\n                        resolve({\n                            dataUrl: r,\n                            format: format\n                        });\n                    }\n                    else {\n                        resolve({\n                            base64String: r.split(',')[1],\n                            format: format\n                        });\n                    }\n                };\n                reader.onerror = function (e) {\n                    reject(e);\n                };\n            }\n        });\n    };\n    return CameraPluginWeb;\n}(WebPlugin));\nexport { CameraPluginWeb };\nvar Camera = new CameraPluginWeb();\nexport { Camera };\n//# sourceMappingURL=camera.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nvar ClipboardPluginWeb = /** @class */ (function (_super) {\n    __extends(ClipboardPluginWeb, _super);\n    function ClipboardPluginWeb() {\n        return _super.call(this, {\n            name: 'Clipboard',\n            platforms: ['web']\n        }) || this;\n    }\n    ClipboardPluginWeb.prototype.write = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!navigator.clipboard) {\n                            return [2 /*return*/, Promise.reject('Clipboard API not available in this browser')];\n                        }\n                        if (!(options.string !== undefined || options.url)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, navigator.clipboard.writeText(options.string !== undefined ? options.string : options.url)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (options.image) {\n                            return [2 /*return*/, Promise.reject('Setting images not supported on the web')];\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        });\n    };\n    ClipboardPluginWeb.prototype.read = function (_options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var text, data, _i, _a, item;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!navigator.clipboard) {\n                            return [2 /*return*/, Promise.reject('Clipboard API not available in this browser')];\n                        }\n                        if (!(_options.type === 'string' || _options.type === 'url')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, navigator.clipboard.readText()];\n                    case 1:\n                        text = _b.sent();\n                        return [2 /*return*/, Promise.resolve({ value: text })];\n                    case 2: return [4 /*yield*/, navigator.clipboard.read()];\n                    case 3:\n                        data = _b.sent();\n                        for (_i = 0, _a = data.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            if (item.type === 'text/plain') {\n                                return [2 /*return*/, Promise.resolve({ value: item.getAs('text/plain') })];\n                            }\n                        }\n                        _b.label = 4;\n                    case 4: return [2 /*return*/, Promise.reject('Unable to get data from clipboard')];\n                }\n            });\n        });\n    };\n    return ClipboardPluginWeb;\n}(WebPlugin));\nexport { ClipboardPluginWeb };\nvar Clipboard = new ClipboardPluginWeb();\nexport { Clipboard };\n//# sourceMappingURL=clipboard.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { uuid4 } from '../util';\nvar DevicePluginWeb = /** @class */ (function (_super) {\n    __extends(DevicePluginWeb, _super);\n    function DevicePluginWeb() {\n        return _super.call(this, {\n            name: 'Device',\n            platforms: ['web']\n        }) || this;\n    }\n    DevicePluginWeb.prototype.getInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var ua, uaFields, battery, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ua = navigator.userAgent;\n                        uaFields = this.parseUa(ua);\n                        battery = {};\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, navigator.getBattery()];\n                    case 2:\n                        battery = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, Promise.resolve({\n                            model: uaFields.model,\n                            platform: 'web',\n                            appVersion: '',\n                            appBuild: '',\n                            operatingSystem: uaFields.operatingSystem,\n                            osVersion: uaFields.osVersion,\n                            manufacturer: navigator.vendor,\n                            isVirtual: false,\n                            batteryLevel: battery.level,\n                            isCharging: battery.charging,\n                            uuid: this.getUid()\n                        })];\n                }\n            });\n        });\n    };\n    DevicePluginWeb.prototype.getLanguageCode = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, {\n                        value: navigator.language\n                    }];\n            });\n        });\n    };\n    DevicePluginWeb.prototype.parseUa = function (_ua) {\n        var uaFields = {};\n        var start = _ua.indexOf('(') + 1;\n        var end = _ua.indexOf(') AppleWebKit');\n        if (_ua.indexOf(') Gecko') !== -1) {\n            end = _ua.indexOf(') Gecko');\n        }\n        var fields = _ua.substring(start, end);\n        if (_ua.indexOf('Android') !== -1) {\n            uaFields.model = fields.replace('; wv', '').split('; ').pop().split(' Build')[0];\n            uaFields.osVersion = fields.split('; ')[1];\n        }\n        else {\n            uaFields.model = fields.split('; ')[0];\n            if (navigator.oscpu) {\n                uaFields.osVersion = navigator.oscpu;\n            }\n            else {\n                if (_ua.indexOf('Windows') !== -1) {\n                    uaFields.osVersion = fields;\n                }\n                else {\n                    var lastParts = fields.split('; ').pop().replace(' like Mac OS X', '').split(' ');\n                    uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n                }\n            }\n        }\n        if (/android/i.test(_ua)) {\n            uaFields.operatingSystem = 'android';\n        }\n        else if (/iPad|iPhone|iPod/.test(_ua) && !window.MSStream) {\n            uaFields.operatingSystem = 'ios';\n        }\n        else if (/Win/.test(_ua)) {\n            uaFields.operatingSystem = 'windows';\n        }\n        else if (/Mac/i.test(_ua)) {\n            uaFields.operatingSystem = 'mac';\n        }\n        else {\n            uaFields.operatingSystem = 'unknown';\n        }\n        return uaFields;\n    };\n    DevicePluginWeb.prototype.getUid = function () {\n        var uid = window.localStorage.getItem('_capuid');\n        if (uid) {\n            return uid;\n        }\n        uid = uuid4();\n        window.localStorage.setItem('_capuid', uid);\n        return uid;\n    };\n    return DevicePluginWeb;\n}(WebPlugin));\nexport { DevicePluginWeb };\nvar Device = new DevicePluginWeb();\nexport { Device };\n//# sourceMappingURL=device.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { FilesystemDirectory } from '../core-plugin-definitions';\nvar FilesystemPluginWeb = /** @class */ (function (_super) {\n    __extends(FilesystemPluginWeb, _super);\n    function FilesystemPluginWeb() {\n        var _this = _super.call(this, {\n            name: 'Filesystem',\n            platforms: ['web']\n        }) || this;\n        _this.DEFAULT_DIRECTORY = FilesystemDirectory.Data;\n        _this.DB_VERSION = 1;\n        _this.DB_NAME = 'Disc';\n        _this._writeCmds = ['add', 'put', 'delete'];\n        return _this;\n    }\n    FilesystemPluginWeb.prototype.initDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this._db !== undefined) {\n                    return [2 /*return*/, this._db];\n                }\n                if (!('indexedDB' in window)) {\n                    throw new Error('This browser doesn\\'t support IndexedDB');\n                }\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var request = indexedDB.open(_this.DB_NAME, _this.DB_VERSION);\n                        request.onupgradeneeded = FilesystemPluginWeb.doUpgrade;\n                        request.onsuccess = function () {\n                            _this._db = request.result;\n                            resolve(request.result);\n                        };\n                        request.onerror = function () { return reject(request.error); };\n                        request.onblocked = function () {\n                            console.warn('db blocked');\n                        };\n                    })];\n            });\n        });\n    };\n    FilesystemPluginWeb.doUpgrade = function (event) {\n        var eventTarget = event.target;\n        var db = eventTarget.result;\n        switch (event.oldVersion) {\n            case 0:\n            case 1:\n            default:\n                if (db.objectStoreNames.contains('FileStorage')) {\n                    db.deleteObjectStore('FileStorage');\n                }\n                var store = db.createObjectStore('FileStorage', { keyPath: 'path' });\n                store.createIndex('by_folder', 'folder');\n        }\n    };\n    FilesystemPluginWeb.prototype.dbRequest = function (cmd, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var readFlag;\n            return __generator(this, function (_a) {\n                readFlag = this._writeCmds.indexOf(cmd) !== -1 ? 'readwrite' : 'readonly';\n                return [2 /*return*/, this.initDb()\n                        .then(function (conn) {\n                        return new Promise(function (resolve, reject) {\n                            var tx = conn.transaction(['FileStorage'], readFlag);\n                            var store = tx.objectStore('FileStorage');\n                            var req = store[cmd].apply(store, args);\n                            req.onsuccess = function () { return resolve(req.result); };\n                            req.onerror = function () { return reject(req.error); };\n                        });\n                    })];\n            });\n        });\n    };\n    FilesystemPluginWeb.prototype.dbIndexRequest = function (indexName, cmd, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var readFlag;\n            return __generator(this, function (_a) {\n                readFlag = this._writeCmds.indexOf(cmd) !== -1 ? 'readwrite' : 'readonly';\n                return [2 /*return*/, this.initDb()\n                        .then(function (conn) {\n                        return new Promise(function (resolve, reject) {\n                            var tx = conn.transaction(['FileStorage'], readFlag);\n                            var store = tx.objectStore('FileStorage');\n                            var index = store.index(indexName);\n                            var req = index[cmd].apply(index, args);\n                            req.onsuccess = function () { return resolve(req.result); };\n                            req.onerror = function () { return reject(req.error); };\n                        });\n                    })];\n            });\n        });\n    };\n    FilesystemPluginWeb.prototype.getPath = function (directory, uriPath) {\n        directory = directory || this.DEFAULT_DIRECTORY;\n        var cleanedUriPath = uriPath !== undefined ? uriPath.replace(/^[/]+|[/]+$/g, '') : '';\n        var fsPath = '/' + directory;\n        if (uriPath !== '')\n            fsPath += '/' + cleanedUriPath;\n        return fsPath;\n    };\n    FilesystemPluginWeb.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var conn, tx, store;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.initDb()];\n                    case 1:\n                        conn = _a.sent();\n                        tx = conn.transaction(['FileStorage'], 'readwrite');\n                        store = tx.objectStore('FileStorage');\n                        store.clear();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Read a file from disk\n     * @param options options for the file read\n     * @return a promise that resolves with the read file data result\n     */\n    FilesystemPluginWeb.prototype.readFile = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        entry = _a.sent();\n                        if (entry === undefined)\n                            throw Error('File does not exist.');\n                        return [2 /*return*/, { data: entry.content }];\n                }\n            });\n        });\n    };\n    /**\n     * Write a file to disk in the specified location on device\n     * @param options options for the file write\n     * @return a promise that resolves with the file write result\n     */\n    FilesystemPluginWeb.prototype.writeFile = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, data, occupiedEntry, encoding, parentPath, parentEntry, subDirIndex, parentArgPath, now, pathObj;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        data = options.data;\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        occupiedEntry = _a.sent();\n                        if (occupiedEntry && occupiedEntry.type === 'directory')\n                            throw ('The supplied path is a directory.');\n                        encoding = options.encoding;\n                        parentPath = path.substr(0, path.lastIndexOf('/'));\n                        return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n                    case 2:\n                        parentEntry = _a.sent();\n                        if (!(parentEntry === undefined)) return [3 /*break*/, 4];\n                        subDirIndex = parentPath.indexOf('/', 1);\n                        if (!(subDirIndex !== -1)) return [3 /*break*/, 4];\n                        parentArgPath = parentPath.substr(subDirIndex);\n                        return [4 /*yield*/, this.mkdir({ path: parentArgPath, directory: options.directory, recursive: true })];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        now = Date.now();\n                        pathObj = {\n                            path: path,\n                            folder: parentPath,\n                            type: 'file',\n                            size: data.length,\n                            ctime: now,\n                            mtime: now,\n                            content: !encoding && data.indexOf(',') >= 0 ? data.split(',')[1] : data,\n                        };\n                        return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Append to a file on disk in the specified location on device\n     * @param options options for the file append\n     * @return a promise that resolves with the file write result\n     */\n    FilesystemPluginWeb.prototype.appendFile = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, data, parentPath, now, ctime, occupiedEntry, parentEntry, parentArgPath, pathObj;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        data = options.data;\n                        parentPath = path.substr(0, path.lastIndexOf('/'));\n                        now = Date.now();\n                        ctime = now;\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        occupiedEntry = _a.sent();\n                        if (occupiedEntry && occupiedEntry.type === 'directory')\n                            throw ('The supplied path is a directory.');\n                        return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n                    case 2:\n                        parentEntry = _a.sent();\n                        if (!(parentEntry === undefined)) return [3 /*break*/, 4];\n                        parentArgPath = parentPath.substr(parentPath.indexOf('/', 1));\n                        return [4 /*yield*/, this.mkdir({ path: parentArgPath, directory: options.directory, recursive: true })];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        if (occupiedEntry !== undefined) {\n                            data = occupiedEntry.content + data;\n                            ctime = occupiedEntry.ctime;\n                        }\n                        pathObj = {\n                            path: path,\n                            folder: parentPath,\n                            type: 'file',\n                            size: data.length,\n                            ctime: ctime,\n                            mtime: now,\n                            content: data\n                        };\n                        return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Delete a file from disk\n     * @param options options for the file delete\n     * @return a promise that resolves with the deleted file data result\n     */\n    FilesystemPluginWeb.prototype.deleteFile = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, entry, entries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        entry = _a.sent();\n                        if (entry === undefined)\n                            throw Error('File does not exist.');\n                        return [4 /*yield*/, this.dbIndexRequest('by_folder', 'getAllKeys', [IDBKeyRange.only(path)])];\n                    case 2:\n                        entries = _a.sent();\n                        if (entries.length !== 0)\n                            throw Error('Folder is not empty.');\n                        return [4 /*yield*/, this.dbRequest('delete', [path])];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Create a directory.\n     * @param options options for the mkdir\n     * @return a promise that resolves with the mkdir result\n     */\n    FilesystemPluginWeb.prototype.mkdir = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, createIntermediateDirectories, recursive, doRecursive, parentPath, depth, parentEntry, occupiedEntry, parentArgPath, now, pathObj;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        createIntermediateDirectories = options.createIntermediateDirectories;\n                        if (options.createIntermediateDirectories !== undefined) {\n                            console.warn('createIntermediateDirectories is deprecated, use recursive');\n                        }\n                        recursive = options.recursive;\n                        doRecursive = (createIntermediateDirectories || recursive);\n                        parentPath = path.substr(0, path.lastIndexOf('/'));\n                        depth = (path.match(/\\//g) || []).length;\n                        return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n                    case 1:\n                        parentEntry = _a.sent();\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 2:\n                        occupiedEntry = _a.sent();\n                        if (depth === 1)\n                            throw Error('Cannot create Root directory');\n                        if (occupiedEntry !== undefined)\n                            throw Error('Current directory does already exist.');\n                        if (!doRecursive && depth !== 2 && parentEntry === undefined)\n                            throw Error('Parent directory must exist');\n                        if (!(doRecursive && depth !== 2 && parentEntry === undefined)) return [3 /*break*/, 4];\n                        parentArgPath = parentPath.substr(parentPath.indexOf('/', 1));\n                        return [4 /*yield*/, this.mkdir({\n                                path: parentArgPath,\n                                directory: options.directory,\n                                recursive: doRecursive\n                            })];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        now = Date.now();\n                        pathObj = { path: path, folder: parentPath, type: 'directory', size: 0, ctime: now, mtime: now };\n                        return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Remove a directory\n     * @param options the options for the directory remove\n     */\n    FilesystemPluginWeb.prototype.rmdir = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, directory, recursive, fullPath, entry, readDirResult, _i, _a, entry_1, entryPath, entryObj;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        path = options.path, directory = options.directory, recursive = options.recursive;\n                        fullPath = this.getPath(directory, path);\n                        return [4 /*yield*/, this.dbRequest('get', [fullPath])];\n                    case 1:\n                        entry = _b.sent();\n                        if (entry === undefined)\n                            throw Error('Folder does not exist.');\n                        if (entry.type !== 'directory')\n                            throw Error('Requested path is not a directory');\n                        return [4 /*yield*/, this.readdir({ path: path, directory: directory })];\n                    case 2:\n                        readDirResult = _b.sent();\n                        if (readDirResult.files.length !== 0 && !recursive)\n                            throw Error('Folder is not empty');\n                        _i = 0, _a = readDirResult.files;\n                        _b.label = 3;\n                    case 3:\n                        if (!(_i < _a.length)) return [3 /*break*/, 9];\n                        entry_1 = _a[_i];\n                        entryPath = path + \"/\" + entry_1;\n                        return [4 /*yield*/, this.stat({ path: entryPath, directory: directory })];\n                    case 4:\n                        entryObj = _b.sent();\n                        if (!(entryObj.type === 'file')) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.deleteFile({ path: entryPath, directory: directory })];\n                    case 5:\n                        _b.sent();\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, this.rmdir({ path: entryPath, directory: directory, recursive: recursive })];\n                    case 7:\n                        _b.sent();\n                        _b.label = 8;\n                    case 8:\n                        _i++;\n                        return [3 /*break*/, 3];\n                    case 9: return [4 /*yield*/, this.dbRequest('delete', [fullPath])];\n                    case 10:\n                        _b.sent();\n                        return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    /**\n     * Return a list of files from the directory (not recursive)\n     * @param options the options for the readdir operation\n     * @return a promise that resolves with the readdir directory listing result\n     */\n    FilesystemPluginWeb.prototype.readdir = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, entry, entries, names;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        entry = _a.sent();\n                        if (options.path !== '' && entry === undefined)\n                            throw Error('Folder does not exist.');\n                        return [4 /*yield*/, this.dbIndexRequest('by_folder', 'getAllKeys', [IDBKeyRange.only(path)])];\n                    case 2:\n                        entries = _a.sent();\n                        names = entries.map(function (e) {\n                            return e.substring(path.length + 1);\n                        });\n                        return [2 /*return*/, { files: names }];\n                }\n            });\n        });\n    };\n    /**\n     * Return full File URI for a path and directory\n     * @param options the options for the stat operation\n     * @return a promise that resolves with the file stat result\n     */\n    FilesystemPluginWeb.prototype.getUri = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        entry = _a.sent();\n                        if (!(entry === undefined)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.dbRequest('get', [path + '/'])];\n                    case 2:\n                        entry = (_a.sent());\n                        _a.label = 3;\n                    case 3:\n                        if (entry === undefined)\n                            throw Error('Entry does not exist.');\n                        return [2 /*return*/, {\n                                uri: entry.path\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return data about a file\n     * @param options the options for the stat operation\n     * @return a promise that resolves with the file stat result\n     */\n    FilesystemPluginWeb.prototype.stat = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        path = this.getPath(options.directory, options.path);\n                        return [4 /*yield*/, this.dbRequest('get', [path])];\n                    case 1:\n                        entry = _a.sent();\n                        if (!(entry === undefined)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.dbRequest('get', [path + '/'])];\n                    case 2:\n                        entry = (_a.sent());\n                        _a.label = 3;\n                    case 3:\n                        if (entry === undefined)\n                            throw Error('Entry does not exist.');\n                        return [2 /*return*/, {\n                                type: entry.type,\n                                size: entry.size,\n                                ctime: entry.ctime,\n                                mtime: entry.mtime,\n                                uri: entry.path\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Rename a file or directory\n     * @param options the options for the rename operation\n     * @return a promise that resolves with the rename result\n     */\n    FilesystemPluginWeb.prototype.rename = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._copy(options, true)];\n            });\n        });\n    };\n    /**\n     * Copy a file or directory\n     * @param options the options for the copy operation\n     * @return a promise that resolves with the copy result\n     */\n    FilesystemPluginWeb.prototype.copy = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._copy(options, false)];\n            });\n        });\n    };\n    /**\n     * Function that can perform a copy or a rename\n     * @param options the options for the rename operation\n     * @param doRename whether to perform a rename or copy operation\n     * @return a promise that resolves with the result\n     */\n    FilesystemPluginWeb.prototype._copy = function (options, doRename) {\n        if (doRename === void 0) { doRename = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var to, from, fromDirectory, toDirectory, fromPath, toPath, toObj, e_1, toPathComponents, toPath_1, toParentDirectory, fromObj, updateTime, _a, file, e_2, contents, _i, contents_1, filename;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        to = options.to, from = options.from, fromDirectory = options.directory, toDirectory = options.toDirectory;\n                        if (!to || !from) {\n                            throw Error('Both to and from must be provided');\n                        }\n                        // If no \"to\" directory is provided, use the \"from\" directory\n                        if (!toDirectory) {\n                            toDirectory = fromDirectory;\n                        }\n                        fromPath = this.getPath(fromDirectory, from);\n                        toPath = this.getPath(toDirectory, to);\n                        // Test that the \"to\" and \"from\" locations are different\n                        if (fromPath === toPath) {\n                            return [2 /*return*/, {}];\n                        }\n                        if (toPath.startsWith(fromPath)) {\n                            throw Error('To path cannot contain the from path');\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 6]);\n                        return [4 /*yield*/, this.stat({\n                                path: to,\n                                directory: toDirectory\n                            })];\n                    case 2:\n                        toObj = _b.sent();\n                        return [3 /*break*/, 6];\n                    case 3:\n                        e_1 = _b.sent();\n                        toPathComponents = to.split('/');\n                        toPathComponents.pop();\n                        toPath_1 = toPathComponents.join('/');\n                        if (!(toPathComponents.length > 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.stat({\n                                path: toPath_1,\n                                directory: toDirectory,\n                            })];\n                    case 4:\n                        toParentDirectory = _b.sent();\n                        if (toParentDirectory.type !== 'directory') {\n                            throw new Error('Parent directory of the to path is a file');\n                        }\n                        _b.label = 5;\n                    case 5: return [3 /*break*/, 6];\n                    case 6:\n                        // Cannot overwrite a directory\n                        if (toObj && toObj.type === 'directory') {\n                            throw new Error('Cannot overwrite a directory with a file');\n                        }\n                        return [4 /*yield*/, this.stat({\n                                path: from,\n                                directory: fromDirectory,\n                            })];\n                    case 7:\n                        fromObj = _b.sent();\n                        updateTime = function (path, ctime, mtime) { return __awaiter(_this, void 0, void 0, function () {\n                            var fullPath, entry;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        fullPath = this.getPath(toDirectory, path);\n                                        return [4 /*yield*/, this.dbRequest('get', [fullPath])];\n                                    case 1:\n                                        entry = _a.sent();\n                                        entry.ctime = ctime;\n                                        entry.mtime = mtime;\n                                        return [4 /*yield*/, this.dbRequest('put', [entry])];\n                                    case 2:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        _a = fromObj.type;\n                        switch (_a) {\n                            case 'file': return [3 /*break*/, 8];\n                            case 'directory': return [3 /*break*/, 15];\n                        }\n                        return [3 /*break*/, 28];\n                    case 8: return [4 /*yield*/, this.readFile({\n                            path: from,\n                            directory: fromDirectory\n                        })];\n                    case 9:\n                        file = _b.sent();\n                        if (!doRename) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.deleteFile({\n                                path: from,\n                                directory: fromDirectory\n                            })];\n                    case 10:\n                        _b.sent();\n                        _b.label = 11;\n                    case 11: \n                    // Write the file to the new location\n                    return [4 /*yield*/, this.writeFile({\n                            path: to,\n                            directory: toDirectory,\n                            data: file.data\n                        })];\n                    case 12:\n                        // Write the file to the new location\n                        _b.sent();\n                        if (!doRename) return [3 /*break*/, 14];\n                        return [4 /*yield*/, updateTime(to, fromObj.ctime, fromObj.mtime)];\n                    case 13:\n                        _b.sent();\n                        _b.label = 14;\n                    case 14: \n                    // Resolve promise\n                    return [2 /*return*/, {}];\n                    case 15:\n                        if (toObj) {\n                            throw Error('Cannot move a directory over an existing object');\n                        }\n                        _b.label = 16;\n                    case 16:\n                        _b.trys.push([16, 20, , 21]);\n                        // Create the to directory\n                        return [4 /*yield*/, this.mkdir({\n                                path: to,\n                                directory: toDirectory,\n                                recursive: false,\n                            })];\n                    case 17:\n                        // Create the to directory\n                        _b.sent();\n                        if (!doRename) return [3 /*break*/, 19];\n                        return [4 /*yield*/, updateTime(to, fromObj.ctime, fromObj.mtime)];\n                    case 18:\n                        _b.sent();\n                        _b.label = 19;\n                    case 19: return [3 /*break*/, 21];\n                    case 20:\n                        e_2 = _b.sent();\n                        return [3 /*break*/, 21];\n                    case 21: return [4 /*yield*/, this.readdir({\n                            path: from,\n                            directory: fromDirectory,\n                        })];\n                    case 22:\n                        contents = (_b.sent()).files;\n                        _i = 0, contents_1 = contents;\n                        _b.label = 23;\n                    case 23:\n                        if (!(_i < contents_1.length)) return [3 /*break*/, 26];\n                        filename = contents_1[_i];\n                        // Move item from the from directory to the to directory\n                        return [4 /*yield*/, this._copy({\n                                from: from + \"/\" + filename,\n                                to: to + \"/\" + filename,\n                                directory: fromDirectory,\n                                toDirectory: toDirectory,\n                            }, doRename)];\n                    case 24:\n                        // Move item from the from directory to the to directory\n                        _b.sent();\n                        _b.label = 25;\n                    case 25:\n                        _i++;\n                        return [3 /*break*/, 23];\n                    case 26:\n                        if (!doRename) return [3 /*break*/, 28];\n                        return [4 /*yield*/, this.rmdir({\n                                path: from,\n                                directory: fromDirectory\n                            })];\n                    case 27:\n                        _b.sent();\n                        _b.label = 28;\n                    case 28: return [2 /*return*/, {}];\n                }\n            });\n        });\n    };\n    FilesystemPluginWeb._debug = true;\n    return FilesystemPluginWeb;\n}(WebPlugin));\nexport { FilesystemPluginWeb };\nvar Filesystem = new FilesystemPluginWeb();\nexport { Filesystem };\n//# sourceMappingURL=filesystem.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { extend } from '../util';\nvar GeolocationPluginWeb = /** @class */ (function (_super) {\n    __extends(GeolocationPluginWeb, _super);\n    function GeolocationPluginWeb() {\n        return _super.call(this, {\n            name: 'Geolocation',\n            platforms: ['web']\n        }) || this;\n    }\n    GeolocationPluginWeb.prototype.getCurrentPosition = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            return _this.requestPermissions().then(function (_result) {\n                window.navigator.geolocation.getCurrentPosition(function (pos) {\n                    resolve(pos);\n                }, function (err) {\n                    reject(err);\n                }, extend({\n                    enableHighAccuracy: true,\n                    timeout: 10000,\n                    maximumAge: 0\n                }, options));\n            });\n        });\n    };\n    GeolocationPluginWeb.prototype.watchPosition = function (options, callback) {\n        var id = window.navigator.geolocation.watchPosition(function (pos) {\n            callback(pos);\n        }, function (err) {\n            callback(null, err);\n        }, extend({\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 0\n        }, options));\n        return \"\" + id;\n    };\n    GeolocationPluginWeb.prototype.clearWatch = function (options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n        return Promise.resolve();\n    };\n    return GeolocationPluginWeb;\n}(WebPlugin));\nexport { GeolocationPluginWeb };\nvar Geolocation = new GeolocationPluginWeb();\nexport { Geolocation };\n//# sourceMappingURL=geolocation.js.map","var WebPluginRegistry = /** @class */ (function () {\n    function WebPluginRegistry() {\n        this.plugins = {};\n        this.loadedPlugins = {};\n    }\n    WebPluginRegistry.prototype.addPlugin = function (plugin) {\n        this.plugins[plugin.config.name] = plugin;\n    };\n    WebPluginRegistry.prototype.getPlugin = function (name) {\n        return this.plugins[name];\n    };\n    WebPluginRegistry.prototype.loadPlugin = function (name) {\n        var plugin = this.getPlugin(name);\n        if (!plugin) {\n            console.error(\"Unable to load web plugin \" + name + \", no such plugin found.\");\n            return;\n        }\n        plugin.load();\n    };\n    WebPluginRegistry.prototype.getPlugins = function () {\n        var p = [];\n        for (var name_1 in this.plugins) {\n            p.push(this.plugins[name_1]);\n        }\n        return p;\n    };\n    return WebPluginRegistry;\n}());\nexport { WebPluginRegistry };\nvar WebPlugins = new WebPluginRegistry();\nexport { WebPlugins };\nvar WebPlugin = /** @class */ (function () {\n    function WebPlugin(config, pluginRegistry) {\n        this.config = config;\n        this.loaded = false;\n        this.listeners = {};\n        this.windowListeners = {};\n        if (!pluginRegistry) {\n            WebPlugins.addPlugin(this);\n        }\n        else {\n            pluginRegistry.addPlugin(this);\n        }\n    }\n    WebPlugin.prototype.addWindowListener = function (handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    };\n    WebPlugin.prototype.removeWindowListener = function (handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    };\n    WebPlugin.prototype.addListener = function (eventName, listenerFunc) {\n        var _this = this;\n        var listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        var windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        return {\n            remove: function () {\n                _this.removeListener(eventName, listenerFunc);\n            }\n        };\n    };\n    WebPlugin.prototype.removeListener = function (eventName, listenerFunc) {\n        var listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        var index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    };\n    WebPlugin.prototype.notifyListeners = function (eventName, data) {\n        var listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(function (listener) { return listener(data); });\n        }\n    };\n    WebPlugin.prototype.hasListeners = function (eventName) {\n        return !!this.listeners[eventName].length;\n    };\n    WebPlugin.prototype.registerWindowListener = function (windowEventName, pluginEventName) {\n        var _this = this;\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName: windowEventName,\n            pluginEventName: pluginEventName,\n            handler: function (event) {\n                _this.notifyListeners(pluginEventName, event);\n            }\n        };\n    };\n    WebPlugin.prototype.requestPermissions = function () {\n        if (Capacitor.isNative) {\n            return Capacitor.nativePromise(this.config.name, 'requestPermissions', {});\n        }\n        else {\n            return Promise.resolve({ results: [] });\n        }\n    };\n    WebPlugin.prototype.load = function () {\n        this.loaded = true;\n    };\n    return WebPlugin;\n}());\nexport { WebPlugin };\nvar shouldMergeWebPlugin = function (plugin) {\n    return plugin.config.platforms && plugin.config.platforms.indexOf(Capacitor.platform) >= 0;\n};\n/**\n * For all our known web plugins, merge them into the global plugins\n * registry if they aren't already existing. If they don't exist, that\n * means there's no existing native implementation for it.\n * @param knownPlugins the Capacitor.Plugins global registry.\n */\nexport var mergeWebPlugins = function (knownPlugins) {\n    var plugins = WebPlugins.getPlugins();\n    for (var _i = 0, plugins_1 = plugins; _i < plugins_1.length; _i++) {\n        var plugin = plugins_1[_i];\n        mergeWebPlugin(knownPlugins, plugin);\n    }\n};\nexport var mergeWebPlugin = function (knownPlugins, plugin) {\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    if (knownPlugins.hasOwnProperty(plugin.config.name) && !shouldMergeWebPlugin(plugin)) {\n        return;\n    }\n    knownPlugins[plugin.config.name] = plugin;\n};\n//# sourceMappingURL=index.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar LocalNotificationsPluginWeb = /** @class */ (function (_super) {\n    __extends(LocalNotificationsPluginWeb, _super);\n    function LocalNotificationsPluginWeb() {\n        var _this = _super.call(this, {\n            name: 'LocalNotifications',\n            platforms: ['web']\n        }) || this;\n        _this.pending = [];\n        return _this;\n    }\n    LocalNotificationsPluginWeb.prototype.sendPending = function () {\n        var _this = this;\n        var toRemove = [];\n        var now = +new Date;\n        this.pending.forEach(function (localNotification) {\n            if (localNotification.schedule && localNotification.schedule.at) {\n                if (+localNotification.schedule.at <= now) {\n                    _this.buildNotification(localNotification);\n                    toRemove.push(localNotification);\n                }\n            }\n        });\n        console.log('Sent pending, removing', toRemove);\n        this.pending = this.pending.filter(function (localNotification) { return !toRemove.find(function (ln) { return ln === localNotification; }); });\n    };\n    LocalNotificationsPluginWeb.prototype.sendNotification = function (localNotification) {\n        var _this = this;\n        var l = localNotification;\n        if (localNotification.schedule && localNotification.schedule.at) {\n            var diff = +localNotification.schedule.at - +new Date;\n            this.pending.push(l);\n            setTimeout(function () {\n                _this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(localNotification);\n    };\n    LocalNotificationsPluginWeb.prototype.buildNotification = function (localNotification) {\n        var l = localNotification;\n        return new Notification(l.title, {\n            body: l.body\n        });\n    };\n    LocalNotificationsPluginWeb.prototype.schedule = function (options) {\n        var _this = this;\n        var notifications = [];\n        options.notifications.forEach(function (notification) {\n            notifications.push(_this.sendNotification(notification));\n        });\n        return Promise.resolve({\n            notifications: notifications.map(function (_) { return { id: '' }; })\n        });\n    };\n    LocalNotificationsPluginWeb.prototype.getPending = function () {\n        return Promise.resolve({\n            notifications: this.pending.map(function (localNotification) {\n                return {\n                    id: '' + localNotification.id\n                };\n            })\n        });\n    };\n    LocalNotificationsPluginWeb.prototype.registerActionTypes = function (_options) {\n        throw new Error('Method not implemented.');\n    };\n    LocalNotificationsPluginWeb.prototype.cancel = function (pending) {\n        console.log('Cancel these', pending);\n        this.pending = this.pending.filter(function (localNotification) { return !pending.notifications.find(function (ln) { return ln.id === '' + localNotification.id; }); });\n        return Promise.resolve();\n    };\n    LocalNotificationsPluginWeb.prototype.areEnabled = function () {\n        throw new Error('Method not implemented.');\n    };\n    LocalNotificationsPluginWeb.prototype.requestPermissions = function () {\n        return new Promise(function (resolve, reject) {\n            Notification.requestPermission(function (result) {\n                if (result === 'denied' || result === 'default') {\n                    reject(result);\n                    return;\n                }\n                resolve({\n                    results: [result]\n                });\n            });\n        });\n    };\n    return LocalNotificationsPluginWeb;\n}(WebPlugin));\nexport { LocalNotificationsPluginWeb };\nvar LocalNotifications = new LocalNotificationsPluginWeb();\nexport { LocalNotifications };\n//# sourceMappingURL=local-notifications.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nvar ModalsPluginWeb = /** @class */ (function (_super) {\n    __extends(ModalsPluginWeb, _super);\n    function ModalsPluginWeb() {\n        return _super.call(this, {\n            name: 'Modals',\n            platforms: ['web']\n        }) || this;\n    }\n    ModalsPluginWeb.prototype.alert = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                window.alert(options.message);\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    ModalsPluginWeb.prototype.prompt = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var val;\n            return __generator(this, function (_a) {\n                val = window.prompt(options.message, options.inputPlaceholder || '');\n                return [2 /*return*/, Promise.resolve({\n                        value: val,\n                        cancelled: val === null\n                    })];\n            });\n        });\n    };\n    ModalsPluginWeb.prototype.confirm = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var val;\n            return __generator(this, function (_a) {\n                val = window.confirm(options.message);\n                return [2 /*return*/, Promise.resolve({\n                        value: val\n                    })];\n            });\n        });\n    };\n    ModalsPluginWeb.prototype.showActions = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, _reject) { return __awaiter(_this, void 0, void 0, function () {\n                        var controller, items, actionSheetElement;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    controller = document.querySelector('ion-action-sheet-controller');\n                                    if (!controller) {\n                                        controller = document.createElement('ion-action-sheet-controller');\n                                        document.body.appendChild(controller);\n                                    }\n                                    return [4 /*yield*/, controller.componentOnReady()];\n                                case 1:\n                                    _a.sent();\n                                    items = options.options.map(function (o, i) {\n                                        return {\n                                            text: o.title,\n                                            role: o.style && o.style.toLowerCase() || '',\n                                            icon: o.icon || '',\n                                            handler: function () {\n                                                resolve({\n                                                    index: i\n                                                });\n                                            }\n                                        };\n                                    });\n                                    return [4 /*yield*/, controller.create({\n                                            title: options.title,\n                                            buttons: items\n                                        })];\n                                case 2:\n                                    actionSheetElement = _a.sent();\n                                    return [4 /*yield*/, actionSheetElement.present()];\n                                case 3:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    return ModalsPluginWeb;\n}(WebPlugin));\nexport { ModalsPluginWeb };\nvar Modals = new ModalsPluginWeb();\nexport { Modals };\n//# sourceMappingURL=modals.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar MotionPluginWeb = /** @class */ (function (_super) {\n    __extends(MotionPluginWeb, _super);\n    function MotionPluginWeb() {\n        var _this = _super.call(this, {\n            name: 'Motion'\n        }) || this;\n        _this.registerWindowListener('devicemotion', 'accel');\n        _this.registerWindowListener('deviceorientation', 'orientation');\n        return _this;\n    }\n    return MotionPluginWeb;\n}(WebPlugin));\nexport { MotionPluginWeb };\nvar Motion = new MotionPluginWeb();\nexport { Motion };\n//# sourceMappingURL=motion.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar NetworkPluginWeb = /** @class */ (function (_super) {\n    __extends(NetworkPluginWeb, _super);\n    function NetworkPluginWeb() {\n        var _this = _super.call(this, {\n            name: 'Network',\n            platforms: ['web']\n        }) || this;\n        _this.listenerFunction = null;\n        return _this;\n    }\n    NetworkPluginWeb.prototype.getStatus = function () {\n        return new Promise(function (resolve, reject) {\n            if (!window.navigator) {\n                reject('Network info not available');\n                return;\n            }\n            var connected = window.navigator.onLine;\n            var connection = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            var connectionType = connection ? (connection.type || connection.effectiveType) : 'wifi';\n            resolve({\n                connected: connected,\n                connectionType: connected ? connectionType : 'none'\n            });\n        });\n    };\n    NetworkPluginWeb.prototype.addListener = function (eventName, listenerFunc) {\n        var thisRef = this;\n        var connection = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n        var connectionType = connection ? (connection.type || connection.effectiveType) : 'wifi';\n        var onlineBindFunc = listenerFunc.bind(thisRef, { connected: true, connectionType: connectionType });\n        var offlineBindFunc = listenerFunc.bind(thisRef, { connected: false, connectionType: 'none' });\n        if (eventName.localeCompare('networkStatusChange') === 0) {\n            window.addEventListener('online', onlineBindFunc);\n            window.addEventListener('offline', offlineBindFunc);\n            return {\n                remove: function () {\n                    window.removeEventListener('online', onlineBindFunc);\n                    window.removeEventListener('offline', offlineBindFunc);\n                }\n            };\n        }\n    };\n    return NetworkPluginWeb;\n}(WebPlugin));\nexport { NetworkPluginWeb };\nvar Network = new NetworkPluginWeb();\nexport { Network };\n//# sourceMappingURL=network.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { PermissionType } from '../core-plugin-definitions';\nvar PermissionsPluginWeb = /** @class */ (function (_super) {\n    __extends(PermissionsPluginWeb, _super);\n    function PermissionsPluginWeb() {\n        return _super.call(this, {\n            name: 'Permissions'\n        }) || this;\n    }\n    PermissionsPluginWeb.prototype.query = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var navigator, name, ret;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        navigator = window.navigator;\n                        if (!navigator.permissions) {\n                            return [2 /*return*/, Promise.reject('This browser does not support the Permissions API')];\n                        }\n                        name = options.name === PermissionType.Photos ? 'camera' : options.name;\n                        return [4 /*yield*/, navigator.permissions.query({ name: name })];\n                    case 1:\n                        ret = _a.sent();\n                        return [2 /*return*/, {\n                                state: ret.state\n                            }];\n                }\n            });\n        });\n    };\n    return PermissionsPluginWeb;\n}(WebPlugin));\nexport { PermissionsPluginWeb };\nvar Permissions = new PermissionsPluginWeb();\nexport { Permissions };\n//# sourceMappingURL=permissions.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar SharePluginWeb = /** @class */ (function (_super) {\n    __extends(SharePluginWeb, _super);\n    function SharePluginWeb() {\n        return _super.call(this, {\n            name: 'Share',\n            platforms: ['web']\n        }) || this;\n    }\n    SharePluginWeb.prototype.share = function (options) {\n        if (!navigator.share) {\n            return Promise.reject('Web Share API not available');\n        }\n        return navigator.share({\n            title: options.title,\n            text: options.text,\n            url: options.url\n        });\n    };\n    return SharePluginWeb;\n}(WebPlugin));\nexport { SharePluginWeb };\nvar Share = new SharePluginWeb();\nexport { Share };\n//# sourceMappingURL=share.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar SplashScreenPluginWeb = /** @class */ (function (_super) {\n    __extends(SplashScreenPluginWeb, _super);\n    function SplashScreenPluginWeb() {\n        return _super.call(this, {\n            name: 'SplashScreen',\n            platforms: ['web']\n        }) || this;\n    }\n    SplashScreenPluginWeb.prototype.show = function (_options, _callback) {\n        return Promise.resolve();\n    };\n    SplashScreenPluginWeb.prototype.hide = function (_options, _callback) {\n        return Promise.resolve();\n    };\n    return SplashScreenPluginWeb;\n}(WebPlugin));\nexport { SplashScreenPluginWeb };\nvar SplashScreen = new SplashScreenPluginWeb();\nexport { SplashScreen };\n//# sourceMappingURL=splash-screen.js.map","import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nvar StoragePluginWeb = /** @class */ (function (_super) {\n    __extends(StoragePluginWeb, _super);\n    function StoragePluginWeb() {\n        var _this = _super.call(this, {\n            name: 'Storage',\n            platforms: ['web']\n        }) || this;\n        _this.KEY_PREFIX = '_cap_';\n        return _this;\n    }\n    StoragePluginWeb.prototype.get = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, _reject) {\n            resolve({\n                value: window.localStorage.getItem(_this.makeKey(options.key))\n            });\n        });\n    };\n    StoragePluginWeb.prototype.set = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, _reject) {\n            window.localStorage.setItem(_this.makeKey(options.key), options.value);\n            resolve();\n        });\n    };\n    StoragePluginWeb.prototype.remove = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, _reject) {\n            window.localStorage.removeItem(_this.makeKey(options.key));\n            resolve();\n        });\n    };\n    StoragePluginWeb.prototype.keys = function () {\n        var _this = this;\n        return new Promise(function (resolve, _reject) {\n            resolve({\n                keys: Object.keys(localStorage).filter(function (k) { return _this.isKey(k); }).map(function (k) { return _this.getKey(k); })\n            });\n        });\n    };\n    StoragePluginWeb.prototype.clear = function () {\n        var _this = this;\n        return new Promise(function (resolve, _reject) {\n            Object.keys(localStorage)\n                .filter(function (k) { return _this.isKey(k); })\n                .forEach(function (k) { return window.localStorage.removeItem(k); });\n            resolve();\n        });\n    };\n    StoragePluginWeb.prototype.makeKey = function (key) {\n        return this.KEY_PREFIX + key;\n    };\n    StoragePluginWeb.prototype.isKey = function (key) {\n        return key.indexOf(this.KEY_PREFIX) === 0;\n    };\n    StoragePluginWeb.prototype.getKey = function (key) {\n        return key.substr(this.KEY_PREFIX.length);\n    };\n    return StoragePluginWeb;\n}(WebPlugin));\nexport { StoragePluginWeb };\nvar Storage = new StoragePluginWeb();\nexport { Storage };\n//# sourceMappingURL=storage.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nvar ToastPluginWeb = /** @class */ (function (_super) {\n    __extends(ToastPluginWeb, _super);\n    function ToastPluginWeb() {\n        return _super.call(this, {\n            name: 'Toast',\n            platforms: ['web']\n        }) || this;\n    }\n    ToastPluginWeb.prototype.show = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var duration, toast;\n            return __generator(this, function (_a) {\n                duration = 3000;\n                if (options.duration) {\n                    duration = options.duration === 'long' ? 5000 : 3000;\n                }\n                toast = document.createElement('pwa-toast');\n                toast.duration = duration;\n                toast.message = options.text;\n                document.body.appendChild(toast);\n                return [2 /*return*/];\n            });\n        });\n    };\n    return ToastPluginWeb;\n}(WebPlugin));\nexport { ToastPluginWeb };\nvar Toast = new ToastPluginWeb();\nexport { Toast };\n//# sourceMappingURL=toast.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Scan 5\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<!--\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Scan</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <app-explore-container name=\\\"Scan page\\\"></app-explore-container>\\n</ion-content>\\n-->\\n<ion-content>\\n  <img [src]=\\\"photo\\\" >\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"takePhoto()\\\">\\n      <ion-icon name=\\\"camera\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\"","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }]),\n    HttpClientModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL1VzZXJzL3JvbmFuL0RvY3VtZW50cy9Xb3Jrc3BhY2UvQ2FtQXBwL3NyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyIsInNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSIsImlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc2x1Y2VudDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { Plugins, CameraResultType, CameraSource, FilesystemDirectory, FilesystemEncoding } from '@capacitor/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\n\nconst { Filesystem } = Plugins;\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n  private readonly baseUrl = 'http://vps183484.vps.ovh.ca:3000';\n  photo: SafeResourceUrl;\n\n  constructor(\n\t\t  private sanitizer: DomSanitizer,\n\t\t  private httpClient: HttpClient) {\n\t  this.photo = '/assets/images/000000-0.1.png';\n  }\n\n//  uploadImages(contents): Promise<any[]> {\n uploadImages(contents) {\n\tconsole.log('uploadImages/contents: ' + contents);\n\tconst formData = new FormData();\n\tformData.append('photos', contents, 'filename');\n    this.httpClient.post(`${this.baseUrl}/image-upload`, formData);\n//\treturn this.httpClient.post<any[]>(`${this.baseUrl}/upload-photos`, formData).toPromise();\n  }\n  async sendImage(image) {\n\tconsole.log('sendImage/image.path: ' + image.path);\n\tconsole.log('sendImage/image.webPath: ' + image.webPath);\n\tfetch(image.webPath).then(res => console.log('sendImage/res:' + res));\n\tfetch(image.webPath).then(res => console.log('sendImage/res.blob:' + res.blob()));\n\tfetch(image.webPath).then(res => this.uploadImages(res.blob()));\n  }\n  async sendImage2(image) {\n\t    console.log('image.path');\n\t    console.log(image.path);\n    let contents = await Filesystem.readFile(image.webPath);\n    console.log('contents');\n    console.log(contents);\n    return this.httpClient.post<any[]>(`${this.baseUrl}/upload-photos`, contents).toPromise();\n  }\n\n\n  async takePhoto_2() {\n    const image = await Plugins.Camera.getPhoto({\n      quality: 100,\n      allowEditing: false,\n      resultType: CameraResultType.DataUrl,\n      source: CameraSource.Prompt\n    });\n    console.log('image.dataUrl: ' + image.dataUrl); // data:image/jpeg;base64,...\n    console.log('image.webPath: ' + image.webPath); // undefined\n    this.photo = this.sanitizer.bypassSecurityTrustResourceUrl(image && (image.dataUrl));\n  }\n  async takePhoto() {\n    const image = await Plugins.Camera.getPhoto({\n      quality: 100,\n      allowEditing: false,\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Prompt\n    });\n    console.log('takePhoto/image.path: ' + image.path); //  file:///data/user/0/com.rylorin.camapp/cache/JPEG_...\n    console.log('takePhoto/image.webPath: ' + image.webPath); //  http://localhost/_capacitor_file_/data/user/0/com.rylorin.camapp/cache/JPEG_...\n    this.photo = this.sanitizer.bypassSecurityTrustResourceUrl(image && (image.webPath));\n    this.sendImage(image);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"tab1-tab1-module-es5.js"}